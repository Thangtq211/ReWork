<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven />

	<mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**/*"/>
            <beans:bean id="webContentInterceptor" class="org.springframework.web.servlet.mvc.WebContentInterceptor">
                <beans:property name="cacheSeconds" value="0"/>
                <beans:property name="useExpiresHeader" value="true"/>
                <beans:property name="useCacheControlHeader" value="true"/>
                <beans:property name="useCacheControlNoStore" value="true"/>
            </beans:bean>
        </mvc:interceptor>
    </mvc:interceptors>
    
	<context:component-scan base-package="com.tmobile.federation" />

	<!-- Configure to plugin JSON as request and response in method handler -->
    <beans:bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <beans:property name="messageConverters">
            <beans:list>
                <beans:ref bean="jsonMessageConverter"/>
            </beans:list>
        </beans:property>
    </beans:bean>
    
    <!-- Configure bean to convert JSON to POJO and vice versa -->
    <beans:bean id="jsonMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
    </beans:bean>
    
    
    <!-- No JNDI used and using jdbctemplate -->
    <beans:bean id="OracleDatasource" class="org.springframework.jdbc.datasource.DriverManagerDataSource" autowire="byName">
        <beans:property name="driverClassName" value="oracle.jdbc.OracleDriver"></beans:property>
        <beans:property name="url" value="jdbc:oracle:thin:@localhost:1521/orclpdb"></beans:property>
        <beans:property name="username" value="fbi_stg"></beans:property>
        <beans:property name="password" value="admin"></beans:property>
     </beans:bean>
     
     <beans:bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">  
		<beans:property name="dataSource" ref="OracleDatasource"></beans:property>  
	 </beans:bean>  
   <!--JNDI 
    <bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
    	<property name="jndiName" value="java:comp/env/jdbc/orclpdb"/>
	</bean> -->
<!--  	<bean id="wordDao" class="com.antonia.headsup.model.table.dao.WordDaoImpl">  
		<property name="jdbcTemplate" ref="jdbcTemplate"></property>  
	</bean>  
    -->
    
</beans:beans>
